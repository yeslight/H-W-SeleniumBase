# This is a basic workflow to help you get started with Actions
name: my_W
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
    # branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
  schedule:
    # UTC (国内 UTC+8)
    - cron: '15 23 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  W1:
    runs-on: ubuntu-latest
    # 超时设置
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Setup FFmpeg using versions
        uses: Iamshankhadeep/setup-ffmpeg@v1.2
        with:
          # Not strictly necessary, but it may prevent rate limit
          # errors especially on GitHub-hosted macos machines.
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Environment
        run: |
          pip install --upgrade pip
          pip install Pillow pyscreenshot
          pip install -r ./requirements.txt
          
      - name: 'Renew'
        env:
          URL_BASE: ${{ secrets.URL_BASE_W }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          BARK_TOKEN: ${{ secrets.BARK_TOKEN }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}
        run: |  
          xvfb-run python3 ./main.py
  W2:
    runs-on: ubuntu-22.04
    # 超时设置
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Setup FFmpeg using versions
        uses: Iamshankhadeep/setup-ffmpeg@v1.2
        with:
          # Not strictly necessary, but it may prevent rate limit
          # errors especially on GitHub-hosted macos machines.
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Environment
        run: |
          pip install --upgrade pip
          pip install Pillow pyscreenshot
          pip install -r ./requirements.txt
          
      - name: 'Renew'
        env:
          URL_BASE: ${{ secrets.URL_BASE_W }}
          USERNAME: ${{ secrets.USERNAME2 }}
          PASSWORD: ${{ secrets.PASSWORD }}
          BARK_TOKEN: ${{ secrets.BARK_TOKEN }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}
        run: |  
          xvfb-run python3 ./main.py
